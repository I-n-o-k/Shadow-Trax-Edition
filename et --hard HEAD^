[33mcommit fb09aa526be810e75b194be5b16bf614ce3dc435[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Sun May 3 23:00:25 2020 +0530

    msm: kgsl: Remove sync debug name generation from hot path
    Generating a sync debug name with snprintf in a hot path results in
    excessive CPU time wasted on unneeded debug info. Remove the name
    generation entirely to cut down CPU waste in the GPU's rendering hot
    path.
    
    Signed-off-by: Sultan Alsawaf <sultan@kerneltoast.com>

[33mcommit 6f668f35912e051cba463105752343bf48d9c091[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Tue May 12 18:02:49 2020 +0530

    gpu: adreno: Increase data processing limit
    
    Signed-off-by: raphielscape <rapherion@raphielgang.org>

[33mcommit 7d80776ce113dffbfd4048d7f7b48809a555627c[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Fri Jun 19 22:22:29 2020 +0530

    Flash_tools:Update Changelogs of EAS

[33mcommit c15b41e5f4c48c705614849dc9d2cb16d51545ff[m[33m ([m[1;31morigin/master[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Thu Jun 18 20:47:40 2020 +0530

    Flash_tools:Fix updater script

[33mcommit ea3c776406a39056a656f69088a2c09fcec2759f[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Thu Jun 18 20:41:27 2020 +0530

    Defconfig:Remove audio bitrate kernel cmdline code from defconfig move it to flash script.

[33mcommit 88b33ed53b34e1155e1bb44db45b01a477f13c31[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Thu Jun 18 20:40:08 2020 +0530

    Flash_tools:Update spectrum support for Q

[33mcommit 25b0a51909376bda1ab7890f45d896efb2887f35[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Thu Jun 18 20:39:23 2020 +0530

    Gpu:Add back popp

[33mcommit 6f0699bf786fbe1d50c7442c61a18e5f0b742c2b[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Wed Jun 17 19:16:49 2020 +0530

    lowmemorykiller:Revert back to stock shadow lmk

[33mcommit dd6dcc8feafacc15c14151ef50754ee1af459d9b[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Wed Jun 17 19:16:23 2020 +0530

    Gpu:Disable tracing

[33mcommit b72a9e8a4e2d91dba615ddad696c5c0e3c9f0586[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Thu Apr 30 06:41:25 2020 +0530

    kgsl:Remove spams

[33mcommit 6aa3a3ab30e273bf85257eea27914411639058bd[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Sat May 2 01:32:52 2020 +0530

    disable tracing/logging at various places Part
    Signed-off-by: Parvinder Singh <psndna88@gmail.com>

[33mcommit 17ede6cedc0f7290617c8b1f33d12ef26dd8248b[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Thu Apr 30 01:49:07 2020 +0530

    gpu: msm: Do not compile Adreno 3xx / 4xx drivers
    The msm8996 chipset only supports the Adreno 5xx GPU chips.
    
    Signed-off-by: Tyler Nijmeh <tylernij@gmail.com>
    Signed-off-by: Kazakov Stepan <ksrt12group@gmail.com>

[33mcommit 7eac24dcae3c0ae0d64531f2be22e7d7ddb183ff[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Mon Apr 13 01:51:31 2020 +0530

    Fix derps after popp was dropped

[33mcommit 21692e024ff0cd508c062655525c3ce707516410[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Sat Apr 11 01:44:47 2020 +0530

    msm: kgsl: Remove POPP
    POPP constantly attempts to lower the GPU's frequency behind the
    governor's
    back in order to save power; however, the GPU governor in use
    (msm-adreno-tz) is very good at determining the GPU's load and selecting
    an appropriate frequency to run the GPU at.
    
    POPP was created long ago (perhaps when msm-adreno-tz didn't exist or
    didn't work so well), so it is clearly deprecated. Remove it.
    
    Signed-off-by: Pierre2324 <pdbbasketball@gmail.com>
    Signed-off-by: Sultan Alsawaf <sultan@kerneltoast.com>

[33mcommit 7c05af9f972d9c0cdd9ff14148b089e7c335caf5[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Wed Jun 17 01:13:12 2020 +0530

    Gpu:Revert a lot of changes

[33mcommit abe9d5083559ab71ba9f34565f7e11f0507fecaa[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Mon Jun 15 22:09:57 2020 +0530

    power/suspend.c:Convert info to debug messages

[33mcommit fb2ac39cdea3537e2c9220342cf0706e4de122a6[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Sun Jun 14 18:32:01 2020 +0530

    Flash_script:Fix set_perm errors

[33mcommit b66ce43b2c60d7daa8b6556831ed32613890b1d3[m
Author: psndna88 <psndna88@gmail.com>
Date:   Wed May 10 11:20:18 2017 +0530

    qdsp6v2: stop logspam
    
    [  218.929830] UL data dropped
    [  218.949836] UL data dropped
    [  219.269836] UL data dropped
    [  219.289837] UL data dropped
    [  219.309839] UL data dropped
    [  491.302761] UL data dropped
    [  491.318186] DL data not available
    [  491.322963] UL data dropped
    [  491.338274] DL data not available
    [  491.342772] UL data dropped
    [  491.358278] DL data not available
    [  491.362915] UL data dropped
    [  491.378291] DL data not available
    [  491.382959] UL data dropped
    [  491.398250] DL data not available
    [  491.402810] UL data dropped
    [  491.418293] DL data not available
    [  491.422968] UL data dropped
    [  491.438137] DL data not available
    [  491.442934] UL data dropped
    [  491.458256] DL data not available
    
    Signed-off-by: psndna88 <psndna88@gmail.com>

[33mcommit c97936d6588a29c6564be65a19a67494eb4d63a4[m
Author: Sivanesan Rajapupathi <srajap@codeaurora.org>
Date:   Tue Feb 16 14:31:17 2016 -0500

    crypto: msm: qcrypto: Fix hash crash if not last issue
    
    If an ahash request is not final, the result variable of ahash_request
    may not exist. In the completion callback function, then, do not
    copy the digest result to result variable of ahash_request, if it not
    final.  Otherwise, crash may happen.
    
    Change-Id: I169218e8658500539b19408eca3afeabcaa4816b
    Acked-by: Che-Min Hsieh <cheminh@qti.qualcomm.com>
    Signed-off-by: Sivanesan Rajapupathi <srajap@codeaurora.org>

[33mcommit b4458318511c9e6e1a19f63792af6e08de938c00[m
Author: Kranthikumar Kurapati <kkurap@codeaurora.org>
Date:   Fri Nov 6 11:54:34 2015 -0500

    crypto: msm: qcrypto: Fix spinlock deadlock issue
    
    Disable and then enable bottom half processing across completion callback.
    Otherwise spinlock deadlock may happen.
    
    Change-Id: I1d38a9b978d6a3b72c820fb8c5ccc27e7afc06a3
    Acked-by: Che-Min Hsieh <cheminh@qti.qualcomm.com>
    Signed-off-by: Kranthikumar Kurapati <kkurap@codeaurora.org>

[33mcommit ca8bbb5d394508726a5cbc466e4654fe7c6041c5[m
Author: Venkatesh Yadav Abbarapu <quicvenkat@codeaurora.org>
Date:   Wed Mar 25 10:34:29 2015 +0530

    crypto: msm: fix qcrypto driver to improve IPSec performance
    
    This patch introduces a workqueue which makes all completion
    callbacks back to the network stack. This workqueue is bound
    to the CPU which receives IRQs from CE 1. The done_tasklet
    being scheduled after completion of each CE request has been
    replaced with a mere function call that configures the CE for
    the next request. Flow control logic implemented restricts
    completion callbacks from exceeding a backlog threshold to prevent
    the kernel from running out of memory.
    
    Change-Id: I6d90913cb5f8e567288ca524808ef4afc34ab8cb
    Acked-by: John Nicholas <jnichola@qti.qualcomm.com>
    Signed-off-by: Venkatesh Yadav Abbarapu <quicvenkat@codeaurora.org>

[33mcommit 81db456f27a57b313de37c741bbecbf27510fb93[m
Author: GuneetAtwal <guneetatwal@gmail.com>
Date:   Fri Sep 16 19:53:51 2016 +0530

    remove spammy code
    Signed-off-by: GuneetAtwal <guneetatwal@gmail.com>

[33mcommit 0fc722e75e9b32cee01f2952f5d9d1d993f0b1d2[m
Author: XileForce <rdaguiar360@gmail.com>
Date:   Tue Oct 27 23:40:45 2015 -0700

    Arm64: Enable Dcache word access

[33mcommit 0dac25a830b594181d40e268c239c02cf480ccc6[m
Author: Arun Kumar K <arun.kk@samsung.com>
Date:   Wed May 14 03:59:42 2014 -0300

    BACKPORT: [media] v4l: Add source change event
    
    This event indicates that the video device has encountered
    a source parameter change during runtime. This can typically be a
    resolution change detected by a video decoder OR a format change
    detected by an input connector.
    
    This needs to be nofified to the userspace and the application may
    be expected to reallocate buffers before proceeding. The application
    can subscribe to events on a specific pad or input port which
    it is interested in.
    
    Signed-off-by: Arun Kumar K <arun.kk@samsung.com>
    Acked-by: Sylwester Nawrocki <s.nawrocki@samsung.com>
    Signed-off-by: Hans Verkuil <hans.verkuil@cisco.com>
    Signed-off-by: Mauro Carvalho Chehab <m.chehab@samsung.com>
    (cherry picked from commit 3cbe6e5bcad0b102c06b9c6029fda75630045475)
    
    Conflicts:
            include/uapi/linux/videodev2.h
    
    BUG=chrome-os-partner:44431
    TEST=build kernel and pass
    
    Change-Id: Ieec3a7d58952eddba99b8d7279945fb45444a75a
    Signed-off-by: Heng-Ruey Hsu <henryhsu@chromium.org>
    Reviewed-on: https://chromium-review.googlesource.com/296261
    Commit-Ready: Heng-ruey Hsu <henryhsu@chromium.org>
    Tested-by: Heng-ruey Hsu <henryhsu@chromium.org>
    Reviewed-by: Pawel Osciak <posciak@chromium.org>

[33mcommit 8ad9e5ed42e85573ede54b895cc275ce0a1c32a6[m
Author: Sabrina Dubroca <sd@queasysnail.net>
Date:   Thu Jun 29 16:56:54 2017 +0200

    ipv6: dad: don't remove dynamic addresses if link is down
    
    Currently, when the link for $DEV is down, this command succeeds but the
    address is removed immediately by DAD (1):
    
        ip addr add 1111::12/64 dev $DEV valid_lft 3600 preferred_lft 1800
    
    In the same situation, this will succeed and not remove the address (2):
    
        ip addr add 1111::12/64 dev $DEV
        ip addr change 1111::12/64 dev $DEV valid_lft 3600 preferred_lft 1800
    
    The comment in addrconf_dad_begin() when !IF_READY makes it look like
    this is the intended behavior, but doesn't explain why:
    
         * If the device is not ready:
         * - keep it tentative if it is a permanent address.
         * - otherwise, kill it.
    
    We clearly cannot prevent userspace from doing (2), but we can make (1)
    work consistently with (2).
    
    addrconf_dad_stop() is only called in two cases: if DAD failed, or to
    skip DAD when the link is down. In that second case, the fix is to avoid
    deleting the address, like we already do for permanent addresses.
    
    Fixes: 3c21edbd1137 ("[IPV6]: Defer IPv6 device initialization until the link becomes ready.")
    Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
    Signed-off-by: David S. Miller <davem@davemloft.net>

[33mcommit bd875898502b55277774c5b113ab7401915ee16c[m
Author: Lubomir Rintel <lkundrak@v3.sk>
Date:   Fri Jan 8 13:47:23 2016 +0100

    ipv6: always add flag an address that failed DAD with DADFAILED
    
    The userspace needs to know why is the address being removed so that it can
    perhaps obtain a new address.
    
    Without the DADFAILED flag it's impossible to distinguish removal of a
    temporary and tentative address due to DAD failure from other reasons (device
    removed, manual address removal).
    
    Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>
    Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
    Signed-off-by: David S. Miller <davem@davemloft.net>

[33mcommit c2a49bb060962c560b37b6931f397988c7d6c8fd[m
Author: David S. Miller <davem@davemloft.net>
Date:   Mon Oct 28 20:07:50 2013 -0400

    ipv6: Remove privacy config option.
    
    The code for privacy extentions is very mature, and making it
    configurable only gives marginal memory/code savings in exchange
    for obfuscation and hard to read code via CPP ifdef'ery.
    
    Signed-off-by: David S. Miller <davem@davemloft.net>

[33mcommit 11631ee516e5c275ddccadabe3e16406d48c8def[m
Author: Matt Wagantall <mattw@codeaurora.org>
Date:   Thu Jun 18 14:02:53 2015 -0700

    arm: psci: drop info prints seen during cpu hotplug to pr_debug
    
    These message are printed every time a CPU in hotplugged out,
    resulting in log noise and hurting hotplug latency. Silence them
    by default, by dropping them to pr_debug.
    
    Change-Id: I21632c1dbf54342b5980a82ab7389713e943bf6c
    Signed-off-by: Matt Wagantall <mattw@codeaurora.org>

[33mcommit 2b75c8bf417992a27269189f0af21bf54d662639[m
Author: Greg Hackmann <ghackmann@google.com>
Date:   Mon Jul 24 10:19:24 2017 -0700

    alarmtimer: don't rate limit one-shot timers
    
    Commit ff86bf0c65f1 ("alarmtimer: Rate limit periodic intervals") sets a
    minimum bound on the alarm timer interval.  This minimum bound shouldn't
    be applied if the interval is 0.  Otherwise, one-shot timers will be
    converted into periodic ones.
    
    Fixes: ff86bf0c65f1 ("alarmtimer: Rate limit periodic intervals")
    Reported-by: Ben Fennema <fennema@google.com>
    Signed-off-by: Greg Hackmann <ghackmann@google.com>
    Cc: stable@vger.kernel.org
    Cc: John Stultz <john.stultz@linaro.org>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

[33mcommit d3a55b24d5fcbd1a9577790fdfa20e2167085324[m
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Tue May 30 23:15:35 2017 +0200

    alarmtimer: Rate limit periodic intervals
    
    commit ff86bf0c65f14346bf2440534f9ba5ac232c39a0 upstream.
    
    The alarmtimer code has another source of potentially rearming itself too
    fast. Interval timers with a very samll interval have a similar CPU hog
    effect as the previously fixed overflow issue.
    
    The reason is that alarmtimers do not implement the normal protection
    against this kind of problem which the other posix timer use:
    
      timer expires -> queue signal -> deliver signal -> rearm timer
    
    This scheme brings the rearming under scheduler control and prevents
    permanently firing timers which hog the CPU.
    
    Bringing this scheme to the alarm timer code is a major overhaul because it
    lacks all the necessary mechanisms completely.
    
    So for a quick fix limit the interval to one jiffie. This is not
    problematic in practice as alarmtimers are usually backed by an RTC for
    suspend which have 1 second resolution. It could be therefor argued that
    the resolution of this clock should be set to 1 second in general, but
    that's outside the scope of this fix.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Kostya Serebryany <kcc@google.com>
    Cc: syzkaller <syzkaller@googlegroups.com>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Dmitry Vyukov <dvyukov@google.com>
    Link: http://lkml.kernel.org/r/20170530211655.896767100@linutronix.de
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

[33mcommit 8883e8359921b72c87d555eb6d24d82cfa756241[m
Author: David Ahern <dsa@cumulusnetworks.com>
Date:   Sat Apr 22 09:10:13 2017 -0700

    net: ipv6: send unsolicited NA if enabled for all interfaces
    
    When arp_notify is set to 1 for either a specific interface or for 'all'
    interfaces, gratuitous arp requests are sent. Since ndisc_notify is the
    ipv6 equivalent to arp_notify, it should follow the same semantics.
    Commit 4a6e3c5def13 ("net: ipv6: send unsolicited NA on admin up") sends
    the NA on admin up. The final piece is checking devconf_all->ndisc_notify
    in addition to the per device setting. Add it.
    
    Fixes: 5cb04436eef6 ("ipv6: add knob to send unsolicited ND on link-layer address change")
    Signed-off-by: David Ahern <dsa@cumulusnetworks.com>
    Reviewed-by: Simon Horman <simon.horman@netronome.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

[33mcommit 8dacf72bfbedbe90101e0f8302e8fde7e95de04f[m
Author: Mathias Nyman <mathias.nyman@linux.intel.com>
Date:   Tue Mar 28 15:55:30 2017 +0300

    xhci: Manually give back cancelled URB if we can't queue it for cancel
    
    commit d3519b9d9606991a1305596348b6d690bfa3eb27 upstream.
    
    xhci needs to take care of four scenarios when asked to cancel a URB.
    
    1 URB is not queued or already given back.
      usb_hcd_check_unlink_urb() will return an error, we pass the error on
    
    2 We fail to find xhci internal structures from urb private data such as
      virtual device and endpoint ring.
      Give back URB immediately, can't do anything about internal structures.
    
    3 URB private data has valid pointers to xhci internal data, but host is
      not  responding.
      give back URB immedately and remove the URB from the endpoint lists.
    
    4 Everyting is working
      add URB to cancel list, queue a command to stop the endpoint, after
      which the URB can be turned to no-op or skipped, removed from lists,
      and given back.
    
    We failed to give back the urb in case 2 where the correct device and
    endpoint pointers could not be retrieved from URB private data.
    
    This caused a hang on Dell Inspiron 5558/0VNM2T at resume from suspend
    as urb was never returned.
    
    [  245.270505] INFO: task rtsx_usb_ms_1:254 blocked for more than 120 seconds.
    [  245.272244]       Tainted: G        W       4.11.0-rc3-ARCH #2
    [  245.273983] "echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.
    [  245.275737] rtsx_usb_ms_1   D    0   254      2 0x00000000
    [  245.277524] Call Trace:
    [  245.279278]  __schedule+0x2d3/0x8a0
    [  245.281077]  schedule+0x3d/0x90
    [  245.281961]  usb_kill_urb.part.3+0x6c/0xa0 [usbcore]
    [  245.282861]  ? wake_atomic_t_function+0x60/0x60
    [  245.283760]  usb_kill_urb+0x21/0x30 [usbcore]
    [  245.284649]  usb_start_wait_urb+0xe5/0x170 [usbcore]
    [  245.285541]  ? try_to_del_timer_sync+0x53/0x80
    [  245.286434]  usb_bulk_msg+0xbd/0x160 [usbcore]
    [  245.287326]  rtsx_usb_send_cmd+0x63/0x90 [rtsx_usb]
    
    Reported-by: diego.viola@gmail.com
    Tested-by: diego.viola@gmail.com
    Signed-off-by: Mathias Nyman <mathias.nyman@linux.intel.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
    [bwh: Backported to 3.16: adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

[33mcommit fea69bee1c50fa41ba7ae399c95da7c4913f0b4a[m
Author: Yuejie Shi <syjcnss@gmail.com>
Date:   Fri Mar 31 15:10:20 2017 +0800

    af_key: Add lock to key dump
    
    commit 89e357d83c06b6fac581c3ca7f0ee3ae7e67109e upstream.
    
    A dump may come in the middle of another dump, modifying its dump
    structure members. This race condition will result in NULL pointer
    dereference in kernel. So add a lock to prevent that race.
    
    Fixes: 83321d6b9872 ("[AF_KEY]: Dump SA/SP entries non-atomically")
    Signed-off-by: Yuejie Shi <syjcnss@gmail.com>
    Signed-off-by: Steffen Klassert <steffen.klassert@secunet.com>
    [bwh: Backported to 3.2:
     - pfkey_dump() doesn't support filters
     - Adjust context]
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

[33mcommit d4352161a67ee02fa0caa7f68c16572f78a035aa[m
Author: Gao Feng <fgao@ikuai8.com>
Date:   Sat Mar 25 18:24:36 2017 +0800

    netfilter: nf_nat_snmp: Fix panic when snmp_trap_helper fails to register
    
    In the commit 93557f53e1fb ("netfilter: nf_conntrack: nf_conntrack snmp
    helper"), the snmp_helper is replaced by nf_nat_snmp_hook. So the
    snmp_helper is never registered. But it still tries to unregister the
    snmp_helper, it could cause the panic.
    
    Now remove the useless snmp_helper and the unregister call in the
    error handler.
    
    Fixes: 93557f53e1fb ("netfilter: nf_conntrack: nf_conntrack snmp helper")
    Signed-off-by: Gao Feng <fgao@ikuai8.com>
    Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>

[33mcommit 5e1a866523b35d201fa9d09361ab3492844976ef[m
Author: Alexander Shishkin <alexander.shishkin@linux.intel.com>
Date:   Mon Mar 21 10:02:42 2016 +0200

    perf/core: Don't leak event in the syscall error path
    
    In the error path, event_file not being NULL is used to determine
    whether the event itself still needs to be free'd, so fix it up to
    avoid leaking.
    
    Reported-by: Leon Yu <chianglungyu@gmail.com>
    Signed-off-by: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Thomas Gleixner <tglx@linutronix.de>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Fixes: 130056275ade ("perf: Do not double free")
    Link: http://lkml.kernel.org/r/87twk06yxp.fsf@ashishki-desk.ger.corp.intel.com
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

[33mcommit e17f839ad5997c4f91efc695623ce08c00fe6720[m
Author: Adarsh-MR <adarshmr1998@gmail.com>
Date:   Sat Mar 31 10:47:51 2018 +0000

    msm8956: update prima to LA.BR.1.3.7_rb1.11
    
    Signed-off-by: Adarsh-MR <adarshmr1998@gmail.com>

[33mcommit 48983e2ba0c17fcc016127ad43b30c41e49e6bc6[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Sun Jun 14 05:46:27 2020 +0530

    Defconfig:Make schedutil as default governor

[33mcommit 43f056f40d78aa730432312674f2c922809f07cc[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Sun Jun 14 05:46:02 2020 +0530

    Defconfig:Remove sched debug messages

[33mcommit 82ce10cf4aac4afc76d5bf2ddc46023110780ca5[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Sun Jun 14 05:42:43 2020 +0530

    Fix:set cpufreq_governor object as electroutil as it conflicts with schedutil

[33mcommit 5b9c07c171ca1c87889991d265cd930b44cc0375[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Sun Jun 14 05:41:10 2020 +0530

    Flash_tools:Fix spectrum file name power and rename to battery

[33mcommit e93e91e731fa5bed9da63f7c06d7252e64289287[m
Author: MEGAX91 <blackdeath1370@gmail.com>
Date:   Sat Nov 5 11:02:05 2016 +0330

     mdss: fix potential deadlock.

[33mcommit d5cc5c6922eb90fa17ab96c186076b9fc08e992e[m
Author: AdrianDC <radian.dc@gmail.com>
Date:   Sun May 8 11:07:56 2016 +0200

    firmware_class: Fix firmware_loading_timeout usage of jiffies
    
     * Prevent the firmware loading from exceeding the original
        theorical value of 60 seconds by using msecs_to_jiffies
    
    Change-Id: I1e6dff9986bfa60fcf2ca22c04f847a750cac6d4
    Signed-off-by: AdrianDC <radian.dc@gmail.com>
    Signed-off-by: franciscofranco <franciscofranco.1990@gmail.com>
    Signed-off-by: Joe Maples <joe@frap129.org>

[33mcommit 8e288a8fde2a18e6239d69a034b0d8960acdf7c8[m
Author: Tim Gardner <tim.gardner@canonical.com>
Date:   Thu Nov 14 15:04:51 2013 -0700

    SELinux: security_load_policy: Silence frame-larger-than warning
    
    commit b5495b4217d3fa64deac479db83dbede149af7d8 upstream.
    
    Dynamically allocate a couple of the larger stack variables in order to
    reduce the stack footprint below 1024. gcc-4.8
    
    security/selinux/ss/services.c: In function 'security_load_policy':
    security/selinux/ss/services.c:1964:1: warning: the frame size of 1104 bytes is larger than 1024 bytes [-Wframe-larger-than=]
     }
    
    Also silence a couple of checkpatch warnings at the same time.
    
    WARNING: sizeof policydb should be sizeof(policydb)
    +       memcpy(oldpolicydb, &policydb, sizeof policydb);
    
    WARNING: sizeof policydb should be sizeof(policydb)
    +       memcpy(&policydb, newpolicydb, sizeof policydb);
    
    Cc: Stephen Smalley <sds@tycho.nsa.gov>
    Cc: James Morris <james.l.morris@oracle.com>
    Cc: Eric Paris <eparis@parisplace.org>
    Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
    Signed-off-by: Paul Moore <pmoore@redhat.com>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

[33mcommit 11ad750e0c18d26649622ba0afb90fa3f4f50a10[m
Author: Alexander Potapenko <glider@google.com>
Date:   Mon Mar 6 19:46:14 2017 +0100

    selinux: check for address length in selinux_socket_bind()
    
    
    [ Upstream commit e2f586bd83177d22072b275edd4b8b872daba924 ]
    
    KMSAN (KernelMemorySanitizer, a new error detection tool) reports use of
    uninitialized memory in selinux_socket_bind():
    
    ==================================================================
    BUG: KMSAN: use of unitialized memory
    inter: 0
    CPU: 3 PID: 1074 Comm: packet2 Tainted: G    B           4.8.0-rc6+ #1916
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
     0000000000000000 ffff8800882ffb08 ffffffff825759c8 ffff8800882ffa48
     ffffffff818bf551 ffffffff85bab870 0000000000000092 ffffffff85bab550
     0000000000000000 0000000000000092 00000000bb0009bb 0000000000000002
    Call Trace:
     [<     inline     >] __dump_stack lib/dump_stack.c:15
     [<ffffffff825759c8>] dump_stack+0x238/0x290 lib/dump_stack.c:51
     [<ffffffff818bdee6>] kmsan_report+0x276/0x2e0 mm/kmsan/kmsan.c:1008
     [<ffffffff818bf0fb>] __msan_warning+0x5b/0xb0 mm/kmsan/kmsan_instr.c:424
     [<ffffffff822dae71>] selinux_socket_bind+0xf41/0x1080 security/selinux/hooks.c:4288
     [<ffffffff8229357c>] security_socket_bind+0x1ec/0x240 security/security.c:1240
     [<ffffffff84265d98>] SYSC_bind+0x358/0x5f0 net/socket.c:1366
     [<ffffffff84265a22>] SyS_bind+0x82/0xa0 net/socket.c:1356
     [<ffffffff81005678>] do_syscall_64+0x58/0x70 arch/x86/entry/common.c:292
     [<ffffffff8518217c>] entry_SYSCALL64_slow_path+0x25/0x25 arch/x86/entry/entry_64.o:?
    chained origin: 00000000ba6009bb
     [<ffffffff810bb7a7>] save_stack_trace+0x27/0x50 arch/x86/kernel/stacktrace.c:67
     [<     inline     >] kmsan_save_stack_with_flags mm/kmsan/kmsan.c:322
     [<     inline     >] kmsan_save_stack mm/kmsan/kmsan.c:337
     [<ffffffff818bd2b8>] kmsan_internal_chain_origin+0x118/0x1e0 mm/kmsan/kmsan.c:530
     [<ffffffff818bf033>] __msan_set_alloca_origin4+0xc3/0x130 mm/kmsan/kmsan_instr.c:380
     [<ffffffff84265b69>] SYSC_bind+0x129/0x5f0 net/socket.c:1356
     [<ffffffff84265a22>] SyS_bind+0x82/0xa0 net/socket.c:1356
     [<ffffffff81005678>] do_syscall_64+0x58/0x70 arch/x86/entry/common.c:292
     [<ffffffff8518217c>] return_from_SYSCALL_64+0x0/0x6a arch/x86/entry/entry_64.o:?
    origin description: ----address@SYSC_bind (origin=00000000b8c00900)
    ==================================================================
    
    (the line numbers are relative to 4.8-rc6, but the bug persists upstream)
    
    , when I run the following program as root:
    
    =======================================================
      #include <string.h>
      #include <sys/socket.h>
      #include <netinet/in.h>
    
      int main(int argc, char *argv[]) {
        struct sockaddr addr;
        int size = 0;
        if (argc > 1) {
          size = atoi(argv[1]);
        }
        memset(&addr, 0, sizeof(addr));
        int fd = socket(PF_INET6, SOCK_DGRAM, IPPROTO_IP);
        bind(fd, &addr, size);
        return 0;
      }
    =======================================================
    
    (for different values of |size| other error reports are printed).
    
    This happens because bind() unconditionally copies |size| bytes of
    |addr| to the kernel, leaving the rest uninitialized. Then
    security_socket_bind() reads the IP address bytes, including the
    uninitialized ones, to determine the port, or e.g. pass them further to
    sel_netnode_find(), which uses them to calculate a hash.
    
    Signed-off-by: Alexander Potapenko <glider@google.com>
    Acked-by: Eric Dumazet <edumazet@google.com>
    [PM: fixed some whitespace damage]
    Signed-off-by: Paul Moore <paul@paul-moore.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

[33mcommit 478c4c70828a0cdec33fdd6954474423a1cbd1be[m
Author: tejas <tejasudupa1285@gmail.com>
Date:   Sun Jun 14 01:16:06 2020 +0530

    lowmemorykiller:Upstream from mosix shadow kernel for bullhead

[33mcommit 964c3cee472a4e7d506d97a3c6512156c8cbb85e[m
Author: Gao Feng <fgao@ikuai8.com>
Date:   Fri Mar 24 07:05:12 2017 +0800

    tcp: sysctl: Fix a race to avoid unexpected 0 window from space
    
    
    [ Upstream commit c48367427a39ea0b85c7cf018fe4256627abfd9e ]
    
    Because sysctl_tcp_adv_win_scale could be changed any time, so there
    is one race in tcp_win_from_space.
    For example,
    1.sysctl_tcp_adv_win_scale<=0 (sysctl_tcp_adv_win_scale is negative now)
    2.space>>(-sysctl_tcp_adv_win_scale) (sysctl_tcp_adv_win_scale is postive now)
    
    As a result, tcp_win_from_space returns 0. It is unexpected.
    
    Certainly if the compiler put the sysctl_tcp_adv_win_scale into one
    register firstly, then use the register directly, it would be ok.
    But we could not depend on the compiler behavior.
    
    Signed-off-by: Gao Feng <fgao@ikuai8.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

[33mcommit e1bc6b8ec0f1630649f7b8ecab2c3b6a8f601497[m
Author: Stephen Hemminger <stephen@networkplumber.org>
Date:   Thu Dec 7 15:40:20 2017 -0800

    veth: set peer GSO values
    
    
    [ Upstream commit 72d24955b44a4039db54a1c252b5031969eeaac3 ]
    
    When new veth is created, and GSO values have been configured
    on one device, clone those values to the peer.
    
    For example:
       # ip link add dev vm1 gso_max_size 65530 type veth peer name vm2
    
    This should create vm1 <--> vm2 with both having GSO maximum
    size set to 65530.
    
    Signed-off-by: Stephen Hemminger <sthemmin@microsoft.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

[33mcommit 3d2e99149170ec21dd69ccc503642f30086ddc5e[m
Author: Luca Coelho <luciano.coelho@intel.com>
Date:   Sun Oct 29 11:51:10 2017 +0200

    mac80211: remove BUG() when interface type is invalid
    
    
    [ Upstream commit c7976f5272486e4ff406014c4b43e2fa3b70b052 ]
    
    In the ieee80211_setup_sdata() we check if the interface type is valid
    and, if not, call BUG().  This should never happen, but if there is
    something wrong with the code, it will not be caught until the bug
    happens when an interface is being set up.  Calling BUG() is too
    extreme for this and a WARN_ON() would be better used instead.  Change
    that.
    
    Signed-off-by: Luca Coelho <luciano.coelho@intel.com>
    Signed-off-by: Johannes Berg <johannes.berg@intel.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

[33mcommit 8ed670459a6f850e19ee90ba93c77efb9f958e5d[m
Author: Tomasz Kramkowski <tk@the-tk.com>
Date:   Tue Mar 14 13:29:13 2017 +0000

    HID: clamp input to logical range if no null state
    
    [ Upstream commit c3883fe06488a483658ba5d849b70e49bee15e7c ]
    
    This patch fixes an issue in drivers/hid/hid-input.c where values
    outside of the logical range are not clamped when "null state" bit of
    the input control is not set.
    
    This was discussed on the lists [1] and this change stems from the fact
    due to the ambiguity of the HID specification it might be appropriate to
    follow Microsoft's own interpretation of the specification. As noted in
    Microsoft's documentation [2] in the section titled "Required HID usages
    for digitizers" it is noted that values reported outside the logical
    range "will be considered as invalid data and the value will be changed
    to the nearest boundary value (logical min/max)."
    
    This patch fixes an issue where the (1292:4745) Innomedia INNEX
    GENESIS/ATARI reports out of range values for its X and Y axis of the
    DPad which, due to the null state bit being unset, are forwarded to
    userspace as is. Now these values will get clamped to the logical range
    before being forwarded to userspace. This device was also used to test
    this patch.
    
    This patch expands on commit 3f3752705dbd ("HID: reject input outside
    logical range only if null state is set").
    
    [1]: http://lkml.kernel.org/r/20170307131036.GA853@gaia.local
    [2]: https://msdn.microsoft.com/en-us/library/windows/hardware/dn672278(v=vs.85).asp
    
    Signed-off-by: Tomasz Kramkowski <tk@the-tk.com>
    Acked-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

[33mcommit 899e4ca8723fd810ff7351a020075c22194026b7[m
Author: Valtteri Heikkilä <rnd@nic.fi>
Date:   Tue Feb 14 23:14:32 2017 +0000

    HID: reject input outside logical range only if null state is set
    
    
    [ Upstream commit 3f3752705dbd50b66b66ad7b4d54fe33d2f746ed ]
    
    This patch fixes an issue in drivers/hid/hid-input.c where USB HID
    control null state flag is not checked upon rejecting inputs outside
    logical minimum-maximum range. The check should be made according to USB
    HID specification 1.11, section 6.2.2.5, p.31. The fix will resolve
    issues with some game controllers, such as:
    https://bugzilla.kernel.org/show_bug.cgi?id=68621
    
    [tk@the-tk.com: shortened and fixed spelling in commit message]
    Signed-off-by: Valtteri Heikkilä <rnd@nic.fi>
    Signed-off-by: Tomasz Kramkowski <tk@the-tk.com>
    Acked-By: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

[33mcommit 0965186c362741af1c84984c3487c2f349cb69de[m
Author: Benjamin Tissoires <benjamin.tissoires@redhat.com>
Date:   Wed Jun 19 17:49:05 2013 +0200

    HID: fix false positive out of range values
    
    Commit 6da7066906e977d42104a859c490f5f9a300488c introduced in 3.3
    "HID: ignore absolute values which don't fit between logical min and max"
    prevents some Posiflex touch screen to work because they do not provide
    logical min and max for their buttons.
    Thus, logical min and max are at 0, discarding the buttons events, and
    preventing the device to report appropriate X Y.
    
    Adding a check on "min < max" solves the problem.
    
    Reported-by: Jan Kandziora <jjj@gmx.de>
    Tested-by: Jan Kandziora <jjj@gmx.de>
    Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
    Signed-off-by: Jiri Kosina <jkosina@suse.cz>

[33mcommit 2e5c55ea8a084697dd70e95d4c4c0a93ee620571[m
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Thu Jul 27 09:11:26 2017 +0200

    scsi: sg: only check for dxfer_len greater than 256M
    
    commit f930c7043663188429cd9b254e9d761edfc101ce upstream.
    
    Don't make any assumptions on the sg_io_hdr_t::dxfer_direction or the
    sg_io_hdr_t::dxferp in order to determine if it is a valid request. The
    only way we can check for bad requests is by checking if the length
    exceeds 256M.
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Fixes: 28676d869bbb (scsi: sg: check for valid direction before starting the request)
    Reported-by: Jason L Tibbitts III <tibbs@math.uh.edu>
    Tested-by: Jason L Tibbitts III <tibbs@math.uh.edu>
    Suggested-by: Doug Gilbert <dgilbert@interlog.com>
    Cc: Doug Gilbert <dgilbert@interlog.com>
    Cc: <stable@vger.kernel.org>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

[33mcommit ecedd1fda2dcccbd40b3cefcb2a113d2055d4877[m
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Mon Jul 17 15:11:42 2017 +0200

    scsi: sg: fix static checker warning in sg_is_valid_dxfer
    
    commit 14074aba4bcda3764c9a702b276308b89901d5b6 upstream.
    
    dxfer_len is an unsigned int and we always assign a value > 0 to it, so
    it doesn't make any sense to check if it is < 0. We can't really check
    dxferp as well as we have both NULL and not NULL cases in the possible
    call paths.
    
    So just return true for SG_DXFER_FROM_DEV transfer in
    sg_is_valid_dxfer().
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reported-by: Colin Ian King <colin.king@canonical.com>
    Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
    Cc: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

[33mcommit 63f32154d7075fe602d28086691064158bceff24[m
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Fri Jul 7 10:56:38 2017 +0200

    scsi: sg: fix SG_DXFER_FROM_DEV transfers
    
    commit 68c59fcea1f2c6a54c62aa896cc623c1b5bc9b47 upstream.
    
    SG_DXFER_FROM_DEV transfers do not necessarily have a dxferp as we set
    it to NULL for the old sg_io read/write interface, but must have a
    length bigger than 0. This fixes a regression introduced by commit
    28676d869bbb ("scsi: sg: check for valid direction before starting the
    request")
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Fixes: 28676d869bbb ("scsi: sg: check for valid direction before starting the request")
    Reported-by: Chris Clayton <chris2553@googlemail.com>
    Tested-by: Chris Clayton <chris2553@googlemail.com>
    Cc: Douglas Gilbert <dgilbert@interlog.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Tested-by: Chris Clayton <chris2553@googlemail.com>
    Acked-by: Douglas Gilbert <dgilbert@interlog.com>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Cc: Cristian Crinteanu <crinteanu.cristian@gmail.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

[33mcommit 5b6cb09f035c448778f7843dfbb7967b8ead06c0[m
Author: Johannes Thumshirn <jthumshirn@suse.de>
Date:   Fri Apr 7 09:34:15 2017 +0200

    scsi: sg: check for valid direction before starting the request
    
    
    [ Upstream commit 28676d869bbb5257b5f14c0c95ad3af3a7019dd5 ]
    
    Check for a valid direction before starting the request, otherwise we
    risk running into an assertion in the scsi midlayer checking for valid
    requests.
    
    [mkp: fixed typo]
    
    Signed-off-by: Johannes Thumshirn <jthumshirn@suse.de>
    Link: http://www.spinics.net/lists/linux-scsi/msg104400.html
    Reported-by: Dmitry Vyukov <dvyukov@google.com>
    Signed-off-by: Hannes Reinecke <hare@suse.com>
    Tested-by: Johannes Thumshirn <jthumshirn@suse.de>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
    Signed-off-by: Sasha Levin <alexander.levin@microsoft.com>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

[33mcommit 82c9d1dfa65d96ad31ff16ff4961cd2e4c789fa7[m
Author: Wang Han <416810799@qq.com>
Date:   Tue Mar 20 23:07:43 2018 +0800

    prima: Enable Wifi channel bonding mode unconditionally
    
    Wifi channel bonding is known to improve the internet speed. But
    it depends on userspace configuration, so we need to tweak it with
    something like Magisk.
    
    Avoid this by unconditionally set wifi channel bonding mode to
    true in kerenl. Note that it is a _HACK_, so only use this when
    you need it.
    
    Signed-off-by: Wang Han <416810799@qq.com>

[33mcommit a68c0df015a2a099076528e703ecc558e8ea782c[m
Author: Bart Van Assche <bart.vanassche@sandisk.com>
Date:   Thu May 4 15:50:47 2017 -0700

    target/fileio: Fix zero-length READ and WRITE handling
    
    This patch fixes zero-length READ and WRITE handling in target/FILEIO,
    which was broken a long time back by:
    
    Since:
    
      commit d81cb44726f050d7cf1be4afd9cb45d153b52066
      Author: Paolo Bonzini <pbonzini@redhat.com>
      Date:   Mon Sep 17 16:36:11 2012 -0700
    
          target: go through normal processing for all zero-length commands
    
    which moved zero-length READ and WRITE completion out of target-core,
    to doing submission into backend driver code.
    
    To address this, go ahead and invoke target_complete_cmd() for any
    non negative return value in fd_do_rw().
    
    Signed-off-by: Bart Van Assche <bart.vanassche@sandisk.com>
    Reviewed-by: Hannes Reinecke <hare@suse.com>
    Reviewed-by: Christoph Hellwig <hch@lst.de>
    Cc: Andy Grover <agrover@redhat.com>
    Cc: David Disseldorp <ddiss@suse.de>
    Cc: <stable@vger.kernel.org> # v3.7+
    Signed-off-by: Nicholas Bellinger <nab@linux-iscsi.org>
    Signed-off-by: Joe Maples <joe@frap129.org>

[33mcommit caf08d82c612793521c35b42dc665fb972d22de7[m
Author: Anssi Hannula <anssi.hannula@iki.fi>
Date:   Fri Sep 5 03:11:28 2014 +0300

    dm cache: fix race causing dirty blocks to be marked as clean
    
    When a writeback or a promotion of a block is completed, the cell of
    that block is removed from the prison, the block is marked as clean, and
    the clear_dirty() callback of the cache policy is called.
    
    Unfortunately, performing those actions in this order allows an incoming
    new write bio for that block to come in before clearing the dirty status
    is completed and therefore possibly causing one of these two scenarios:
    
    Scenario A:
    
    Thread 1                      Thread 2
    cell_defer()                  .
    - cell removed from prison    .
    - detained bios queued        .
    .                             incoming write bio
    .                             remapped to cache
    .                             set_dirty() called,
    .                               but block already dirty
    .                               => it does nothing
    clear_dirty()                 .
    - block marked clean          .
    - policy clear_dirty() called .
    
    Result: Block is marked clean even though it is actually dirty. No
    writeback will occur.
    
    Scenario B:
    
    Thread 1                      Thread 2
    cell_defer()                  .
    - cell removed from prison    .
    - detained bios queued        .
    clear_dirty()                 .
    - block marked clean          .
    .                             incoming write bio
    .                             remapped to cache
    .                             set_dirty() called
    .                             - block marked dirty
    .                             - policy set_dirty() called
    - policy clear_dirty() called .
    
    Result: Block is properly marked as dirty, but policy thinks it is clean
    and therefore never asks us to writeback it.
    This case is visible in "dmsetup status" dirty block count (which
    normally decreases to 0 on a quiet device).
    
    Fix these issues by calling clear_dirty() before calling cell_defer().
    Incoming bios for that block will then be detained in the cell and
    released only after clear_dirty() has completed, so the race will not
    occur.
    
    Found by inspecting the code after noticing spurious dirty counts
    (scenario B).
    
    Signed-off-by: Anssi Hannula <anssi.hannula@iki.fi>
    Acked-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Cc: stable@vger.kernel.org
    [@nathanchance: fixed conflicts]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Joe Maples <joe@frap129.org>

[33mcommit dcd698544f5ecf0d67b870a33817588cca393e62[m
Author: Anssi Hannula <anssi.hannula@iki.fi>
Date:   Fri Aug 1 11:55:47 2014 -0400

    dm cache: fix race affecting dirty block count
    
    nr_dirty is updated without locking, causing it to drift so that it is
    non-zero (either a small positive integer, or a very large one when an
    underflow occurs) even when there are no actual dirty blocks.  This was
    due to a race between the workqueue and map function accessing nr_dirty
    in parallel without proper protection.
    
    People were seeing under runs due to a race on increment/decrement of
    nr_dirty, see: https://lkml.org/lkml/2014/6/3/648
    
    Fix this by using an atomic_t for nr_dirty.
    
    Reported-by: roma1390@gmail.com
    Signed-off-by: Anssi Hannula <anssi.hannula@iki.fi>
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Joe Maples <joe@frap129.org>

[33mcommit 8608ba8a343f95c54e05a3235f48ff8d0ce930c0[m
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Thu Jan 9 16:04:12 2014 -0500

    dm cache: add block sizes and total cache blocks to status output
    
    Improve cache_status to emit:
    <metadata block size> <#used metadata blocks>/<#total metadata blocks>
    <cache block size> <#used cache blocks>/<#total cache blocks>
    ...
    
    Adding the block sizes allows for easier calculation of the overall size
    of both the metadata and cache devices.  Adding <#total cache blocks>
    provides useful context for how much of the cache is used.
    
    Unfortunately these additions to the status will require updates to
    users' scripts that monitor the cache status.  But these changes help
    provide more comprehensive information about the cache device and will
    simplify tools that are being developed to manage dm-cache devices --
    because they won't need to issue 3 operations to cobble together the
    information that we can easily provide via a single status ioctl.
    
    While updating the status documentation in cache.txt spaces were
    tabify'd.
    
    Requested-by: Jonathan Brassow <jbrassow@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Acked-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Joe Maples <joe@frap129.org>

[33mcommit fc1c767ff0625143279d8fff2e46de9bf0ee4a39[m
Author: Greg Thelen <gthelen@google.com>
Date:   Thu Jul 31 09:07:19 2014 -0700

    dm bufio: fully initialize shrinker
    
    1d3d4437eae1 ("vmscan: per-node deferred work") added a flags field to
    struct shrinker assuming that all shrinkers were zero filled.  The dm
    bufio shrinker is not zero filled, which leaves arbitrary kmalloc() data
    in flags.  So far the only defined flags bit is SHRINKER_NUMA_AWARE.
    But there are proposed patches which add other bits to shrinker.flags
    (e.g. memcg awareness).
    
    Rather than simply initializing the shrinker, this patch uses kzalloc()
    when allocating the dm_bufio_client to ensure that the embedded shrinker
    and any other similar structures are zeroed.
    
    This fixes theoretical over aggressive shrinking of dm bufio objects.
    If the uninitialized dm_bufio_client.shrinker.flags contains
    SHRINKER_NUMA_AWARE then shrink_slab() would call the dm shrinker for
    each numa node rather than just once.  This has been broken since 3.12.
    
    Signed-off-by: Greg Thelen <gthelen@google.com>
    Acked-by: Mikulas Patocka <mpatocka@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Cc: stable@vger.kernel.org # v3.12+
    Signed-off-by: Joe Maples <joe@frap129.org>

[33mcommit 62f41dd53d8830f111e4a54e0600f3663f342132[m
Author: Joe Thornber <ejt@redhat.com>
Date:   Thu Apr 3 16:16:44 2014 +0100

    dm cache: fix a lock-inversion
    
    When suspending a cache the policy is walked and the individual policy
    hints written to the metadata via sync_metadata().  This led to this
    lock order:
    
          policy->lock
            cache_metadata->root_lock
    
    When loading the cache target the policy is populated while the metadata
    lock is held:
    
          cache_metadata->root_lock
             policy->lock
    
    Fix this potential lock-inversion (ABBA) deadlock in sync_metadata() by
    ensuring the cache_metadata root_lock is held whilst all the hints are
    written, rather than being repeatedly locked while policy->lock is held
    (as was the case with each callout that policy_walk_mappings() made to
    the old save_hint() method).
    
    Found by turning on the CONFIG_PROVE_LOCKING ("Lock debugging: prove
    locking correctness") build option.  However, it is not clear how the
    LOCKDEP reported paths can lead to a deadlock since the two paths,
    suspending a target and loading a target, never occur at the same time.
    But that doesn't mean the same lock-inversion couldn't have occurred
    elsewhere.
    
    Reported-by: Marian Csontos <mcsontos@redhat.com>
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Cc: stable@vger.kernel.org
    Signed-off-by: Joe Maples <joe@frap129.org>

[33mcommit 9b0e907ce6729eaeb3a3b193a403f4f2da20dcac[m
Author: Joe Thornber <ejt@redhat.com>
Date:   Thu Mar 27 14:13:23 2014 +0000

    dm: take care to copy the space map roots before locking the superblock
    
    In theory copying the space map root can fail, but in practice it never
    does because we're careful to check what size buffer is needed.
    
    But make certain we're able to copy the space map roots before
    locking the superblock.
    
    Signed-off-by: Joe Thornber <ejt@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Cc: stable@vger.kernel.org # drop dm-era and dm-cache changes as needed
    Signed-off-by: Joe Maples <joe@frap129.org>

[33mcommit b5a218f16f620e283d99019f2d1f55490da9f5ba[m
Author: Mike Snitzer <snitzer@redhat.com>
Date:   Thu Mar 20 10:11:15 2014 -0400

    dm cache: prevent corruption caused by discard_block_size > cache_block_size
    
    If the discard block size is larger than the cache block size we will
    not properly quiesce IO to a region that is about to be discarded.  This
    results in a race between a cache migration where no copy is needed, and
    a write to an adjacent cache block that's within the same large discard
    block.
    
    Workaround this by limiting the discard_block_size to cache_block_size.
    Also limit the max_discard_sectors to cache_block_size.
    
    A more comprehensive fix that introduces range locking support in the
    bio_prison and proper quiescing of a discard range that spans multiple
    cache blocks is already in development.
    
    Reported-by: Morgan Mears <Morgan.Mears@netapp.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Acked-by: Joe Thornber <ejt@redhat.com>
    Acked-by: Heinz Mauelshagen <heinzm@redhat.com>
    Cc: stable@vger.kernel.org
    [@nathanchance: fixed conflicts]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Joe Maples <joe@frap129.org>

[33mcommit 86e2566e20d2a0a2a5e8aa2d095cb76be43f03f2[m
Author: Heinz Mauelshagen <heinzm@redhat.com>
Date:   Fri Feb 28 12:02:56 2014 -0500

    dm cache mq: fix memory allocation failure for large cache devices
    
    The memory allocated for the multiqueue policy's hash table doesn't need
    to be physically contiguous.  Use vzalloc() instead of kzalloc().
    Fedora has been carrying this fix since 10/10/2013.
    
    Failure seen during creation of a 10TB cached device with a 2048 sector
    block size and 411GB cache size:
    
     dmsetup: page allocation failure: order:9, mode:0x10c0d0
     CPU: 11 PID: 29235 Comm: dmsetup Not tainted 3.10.4 #3
     Hardware name: Supermicro X8DTL/X8DTL, BIOS 2.1a       12/30/2011
      000000000010c0d0 ffff880090941898 ffffffff81387ab4 ffff880090941928
      ffffffff810bb26f 0000000000000009 000000000010c0d0 ffff880090941928
      ffffffff81385dbc ffffffff815f3840 ffffffff00000000 000002000010c0d0
     Call Trace:
      [<ffffffff81387ab4>] dump_stack+0x19/0x1b
      [<ffffffff810bb26f>] warn_alloc_failed+0x110/0x124
      [<ffffffff81385dbc>] ? __alloc_pages_direct_compact+0x17c/0x18e
      [<ffffffff810bda2e>] __alloc_pages_nodemask+0x6c7/0x75e
      [<ffffffff810bdad7>] __get_free_pages+0x12/0x3f
      [<ffffffff810ea148>] kmalloc_order_trace+0x29/0x88
      [<ffffffff810ec1fd>] __kmalloc+0x36/0x11b
      [<ffffffffa031eeed>] ? mq_create+0x1dc/0x2cf [dm_cache_mq]
      [<ffffffffa031efc0>] mq_create+0x2af/0x2cf [dm_cache_mq]
      [<ffffffffa0314605>] dm_cache_policy_create+0xa7/0xd2 [dm_cache]
      [<ffffffffa0312530>] ? cache_ctr+0x245/0xa13 [dm_cache]
      [<ffffffffa031263e>] cache_ctr+0x353/0xa13 [dm_cache]
      [<ffffffffa012b916>] dm_table_add_target+0x227/0x2ce [dm_mod]
      [<ffffffffa012e8e4>] table_load+0x286/0x2ac [dm_mod]
      [<ffffffffa012e65e>] ? dev_wait+0x8a/0x8a [dm_mod]
      [<ffffffffa012e324>] ctl_ioctl+0x39a/0x3c2 [dm_mod]
      [<ffffffffa012e35a>] dm_ctl_ioctl+0xe/0x12 [dm_mod]
      [<ffffffff81101181>] vfs_ioctl+0x21/0x34
      [<ffffffff811019d3>] do_vfs_ioctl+0x3b1/0x3f4
      [<ffffffff810f4d2e>] ? ____fput+0x9/0xb
      [<ffffffff81050b6c>] ? task_work_run+0x7e/0x92
      [<ffffffff81101a68>] SyS_ioctl+0x52/0x82
      [<ffffffff81391d92>] system_call_fastpath+0x16/0x1b
    
    Signed-off-by: Heinz Mauelshagen <heinzm@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Cc: stable@vger.kernel.org
    [@nathanchance: fixed conflicts]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Joe Maples <joe@frap129.org>

[33mcommit 3bbf86ca4bb3fc2d3ca849d4decb380f150b4fde[m
Author: Heinz Mauelshagen <heinzm@redhat.com>
Date:   Thu Feb 27 22:46:48 2014 +0100

    dm cache: fix truncation bug when mapping I/O to >2TB fast device
    
    When remapping a block to the cache's fast device that is larger than
    2TB we must not truncate the destination sector to 32bits.  The 32bit
    temporary result of from_cblock() was being overflowed in
    remap_to_cache() due to the logical left shift.
    
    Use an intermediate 64bit type to store the 32bit from_cblock() result
    to fix the overflow.
    
    Signed-off-by: Heinz Mauelshagen <heinzm@redhat.com>
    Signed-off-by: Mike Snitzer <snitzer@redhat.com>
    Cc: stable@vger.kernel.org
    [@nathanchance: fixed conflicts since no iters in 3.10]
    Signed-off-by: Nathan Chancellor <natechancellor@gmail.com>
    Signed-off-by: Joe Maples <joe@frap129.org>

[33mcommit 2ed0b1a5ba0621afa4fdf864b605388ead7cfc7e[m
Author: NeilBrown <neilb@suse.com>
Date:   Fri Oct 28 15:59:41 2016 +1100

    md: be careful not lot leak internal curr_resync value into metadata. -- (all)
    
    mddev->curr_resync usually records where the current resync is up to,
    but during the starting phase it has some "magic" values.
    
     1 - means that the array is trying to start a resync, but has yielded
         to another array which shares physical devices, and also needs to
         start a resync
     2 - means the array is trying to start resync, but has found another
         array which shares physical devices and has already started resync.
    
     3 - means that resync has commensed, but it is possible that nothing
         has actually been resynced yet.
    
    It is important that this value not be visible to user-space and
    particularly that it doesn't get written to the metadata, as the
    resync or recovery checkpoint.  In part, this is because it may be
    slightly higher than the correct value, though this is very rare.
    In part, because it is not a multiple of 4K, and some devices only
    support 4K aligned accesses.
    
    There are two places where this value is propagates into either
    ->curr_resync_completed or ->recovery_cp or ->recovery_offset.
    These currently avoid the propagation of values 1 and 3, but will
    allow 3 to leak through.
    
    Change them to only propagate the value if it is > 3.
    
    As this can cause an array to fail, the patch is suitable for -stable.
    
    Cc: stable@vger.kernel.org (v3.7+)
    Reported-by: Viswesh <viswesh.vichu@gmail.com>
    Signed-off-by: NeilBrown <neilb@suse.com>
    Signed-off-by: Shaohua Li <shli@fb.com>
    Signed-off-by: Joe Maples <joe@frap129.org>

[33mcommit 259ee354380dc236aa8793f770e84a5043f5b4ff[m
Author: Herbert Xu <herbert@gondor.apana.org.au>
Date:   Mon Mar 26 08:53:25 2018 +0800

    crypto: ahash - Fix early termination in hash walk
    
    commit 900a081f6912a8985dc15380ec912752cb66025a upstream.
    
    When we have an unaligned SG list entry where there is no leftover
    aligned data, the hash walk code will incorrectly return zero as if
    the entire SG list has been processed.
    
    This patch fixes it by moving onto the next page instead.
    
    Reported-by: Eli Cooper <elicooper@gmx.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

[33mcommit b6ed348146f47f1f0b99ed324ab6acaf50c0fe54[m
Author: Andrey Markovytch <andreym@codeaurora.org>
Date:   Thu Jul 7 09:12:59 2016 +0300

    md: dm-req-crypt: fixed error propagation when ICE is used
    
    Whe